from decimal import Decimal
from pywebio.input import slider
from pywebio.output import put_code, popup, put_warning

OSTRICH_EGG = 118
RABBIT = 197
SEA_BASS = 123
SWEET_RED_PEPPER = 26
PARSLEY = 45
BANANAS = 87
WAFFLES = 425
WHEAT_BREAD_FROM_GRADE_1_FLOUR = 329
PISTACHIOS = 555
KEFIR = 51

PRICE_PER_CALORIE = 0.32541
total_calories = 0

weight_ostrich_egg = slider(f'–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ä—Ü—ñ—é —Å—Ç—Ä–æ—É—Å–∏–Ω–æ–≥–æ —è–π—Ü—è \U0001F95A  –≤ –≥—Ä–∞–º–∞—Ö.'
                            f' –ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å {OSTRICH_EGG} –∫–ö–∞–ª/100–≥—Ä', min_value=0, max_value=1000)
total_calories += weight_ostrich_egg * OSTRICH_EGG / 100
put_code(f'–í–∏ –∑–∞–º–æ–≤–∏–ª–∏ {weight_ostrich_egg} –≥—Ä–∞–º—ñ–≤ —Å—Ç—Ä–∞—É—Å–∏–Ω–∏—Ö —è—î—Ü—å,\n'
         f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó {weight_ostrich_egg * OSTRICH_EGG / 100} –∫–ö–∞–ª \n'
         f'–ó–∞–≥–∞–ª—å–Ω–∞ –∫–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó: {total_calories} –∫–ö–∞–ª')

weight_rabbit = slider('–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ä—Ü—ñ—é –∫—Ä–æ–ª–∏–∫–∞ \U0001F407 –≤ –≥—Ä–∞–º–∞—Ö. '
                       f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å {RABBIT} –∫–ö–∞–ª/100–≥—Ä', min_value=0, max_value=500)
total_calories += weight_rabbit * RABBIT / 100
put_code(f'–í–∏ –∑–∞–º–æ–≤–∏–ª–∏ {weight_rabbit} –≥—Ä–∞–º—ñ–≤ –∫—Ä–æ–ª–∏–∫–∞,\n'
         f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó {weight_rabbit * RABBIT / 100} –∫–ö–∞–ª \n'
         f'–ó–∞–≥–∞–ª—å–Ω–∞ –∫–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó: {total_calories} –∫–ö–∞–ª')

weight_sea_bass = slider('–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ä—Ü—ñ—é –æ–∫—É–Ω—è –º–æ—Ä—Å—å–∫–æ–≥–æ \U0001F41F –≤ –≥—Ä–∞–º–∞—Ö. '
                         f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å {SEA_BASS} –∫–ö–∞–ª/100–≥—Ä', min_value=0, max_value=500)
total_calories += weight_sea_bass * SEA_BASS / 100
put_code(f'–í–∏ –∑–∞–º–æ–≤–∏–ª–∏ {weight_sea_bass} –≥—Ä–∞–º—ñ–≤ –æ–∫—É–Ω—è –º–æ—Ä—Å—å–∫–æ–≥–æ,\n'
         f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó {weight_sea_bass * SEA_BASS / 100} –∫–ö–∞–ª \n'
         f'–ó–∞–≥–∞–ª—å–Ω–∞ –∫–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó: {total_calories} –∫–ö–∞–ª')

weight_sweet_red_pepper = slider('–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ä—Ü—ñ—é –ø–µ—Ä—Ü—è —á–µ—Ä–≤–æ–Ω–æ–≥–æ —Å–æ–ª–æ–¥–∫–æ–≥–æ –≤ –≥—Ä–∞–º–∞—Ö. '
                                 f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å {SWEET_RED_PEPPER} –∫–ö–∞–ª/100–≥—Ä', min_value=0, max_value=500)
total_calories += weight_sweet_red_pepper * SWEET_RED_PEPPER / 100
put_code(f'–í–∏ –∑–∞–º–æ–≤–∏–ª–∏ {weight_sweet_red_pepper} –≥—Ä–∞–º—ñ–≤ –ø–µ—Ä—Ü—è —á–µ—Ä–≤–æ–Ω–æ–≥–æ —Å–æ–ª–æ–¥–∫–æ–≥–æ,\n'
         f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó {weight_sweet_red_pepper * SWEET_RED_PEPPER / 100} –∫–ö–∞–ª \n'
         f'–ó–∞–≥–∞–ª—å–Ω–∞ –∫–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó: {total_calories} –∫–ö–∞–ª')

weight_parsley = slider('–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ä—Ü—ñ—é –ø–µ—Ç—Ä—É—à–∫–∏(–∑–µ–ª–µ–Ω—ñ) üåø –≤ –≥—Ä–∞–º–∞—Ö. '
                        f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å {PARSLEY} –∫–ö–∞–ª/100–≥—Ä', min_value=0, max_value=500)
total_calories += weight_parsley * PARSLEY / 100
put_code(f'–í–∏ –∑–∞–º–æ–≤–∏–ª–∏ {weight_parsley} –≥—Ä–∞–º—ñ–≤ –ø–µ—Ç—Ä—É—à–∫–∏(–∑–µ–ª–µ–Ω—ñ),\n'
         f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó {weight_parsley * PARSLEY / 100} –∫–ö–∞–ª \n'
         f'–ó–∞–≥–∞–ª—å–Ω–∞ –∫–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó: {total_calories} –∫–ö–∞–ª')

weight_bananas = slider('–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ä—Ü—ñ—é –±–∞–Ω–∞–Ω—ñ–≤ \U0001F34C  –≤ –≥—Ä–∞–º–∞—Ö. '
                        f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å {BANANAS} –∫–ö–∞–ª/100–≥—Ä', min_value=0, max_value=500)
total_calories += weight_bananas * BANANAS / 100
put_code(f'–í–∏ –∑–∞–º–æ–≤–∏–ª–∏ {weight_bananas} –≥—Ä–∞–º—ñ–≤ –±–∞–Ω–∞–Ω—ñ–≤,\n'
         f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó {weight_bananas * BANANAS / 100} –∫–ö–∞–ª \n'
         f'–ó–∞–≥–∞–ª—å–Ω–∞ –∫–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó: {total_calories} –∫–ö–∞–ª')

weight_waffles = slider('–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ä—Ü—ñ—é –≤–∞—Ñ–ª—ñ–≤ \U0001F9C7 –≤ –≥—Ä–∞–º–∞—Ö. '
                        f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å {WAFFLES} –∫–ö–∞–ª/100–≥—Ä', min_value=0, max_value=500)
total_calories += weight_waffles * WAFFLES / 100
put_code(f'–í–∏ –∑–∞–º–æ–≤–∏–ª–∏ {weight_waffles} –≥—Ä–∞–º—ñ–≤ –≤–∞—Ñ–ª—ñ–≤,\n'
         f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó {weight_waffles * WAFFLES / 100} –∫–ö–∞–ª \n'
         f'–ó–∞–≥–∞–ª—å–Ω–∞ –∫–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó: {total_calories} –∫–ö–∞–ª')

weight_wheat_bread_from_grade_1_flour = slider('–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ä—Ü—ñ—é —Ö–ª—ñ–±–∞ –ø—à–µ–Ω—ñ—á–Ω–æ–≥–æ 1 —Å–æ—Ä—Ç—É \U0001F956 –≤ –≥—Ä–∞–º–∞—Ö. '
                                               f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å {WHEAT_BREAD_FROM_GRADE_1_FLOUR} –∫–ö–∞–ª/100–≥—Ä', min_value=0, max_value=500)
total_calories += weight_wheat_bread_from_grade_1_flour * WHEAT_BREAD_FROM_GRADE_1_FLOUR / 100
put_code(f'–í–∏ –∑–∞–º–æ–≤–∏–ª–∏ {weight_wheat_bread_from_grade_1_flour} –≥—Ä–∞–º—ñ–≤ —Ö–ª—ñ–±–∞ –ø—à–µ–Ω—ñ—á–Ω–æ–≥–æ 1 —Å–æ—Ä—Ç—É,\n'
         f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó {weight_wheat_bread_from_grade_1_flour * WHEAT_BREAD_FROM_GRADE_1_FLOUR / 100} –∫–ö–∞–ª \n'
         f'–ó–∞–≥–∞–ª—å–Ω–∞ –∫–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó: {total_calories} –∫–ö–∞–ª')

weight_pistachios = slider('–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ä—Ü—ñ—é —Ñ—ñ—Å—Ç–∞—à–æ–∫ –≤ –≥—Ä–∞–º–∞—Ö. '
                           f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å {PISTACHIOS} –∫–ö–∞–ª/100–≥—Ä', min_value=0, max_value=500)
total_calories += weight_pistachios * PISTACHIOS / 100
put_code(f'–í–∏ –∑–∞–º–æ–≤–∏–ª–∏ {weight_pistachios} –≥—Ä–∞–º—ñ–≤ —Ñ—ñ—Å—Ç–∞—à–æ–∫,\n'
         f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó {weight_pistachios * PISTACHIOS / 100} –∫–ö–∞–ª \n'
         f'–ó–∞–≥–∞–ª—å–Ω–∞ –∫–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó: {total_calories} –∫–ö–∞–ª')

weight_kefir = slider('–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ä—Ü—ñ—é –∫–µ—Ñ—ñ—Ä–∞ \U0001F95B –≤ –≥—Ä–∞–º–∞—Ö. '
                      f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å {KEFIR} –∫–ö–∞–ª/100–≥—Ä', min_value=0, max_value=500)
total_calories += weight_kefir * KEFIR / 100
put_code(f'–í–∏ –∑–∞–º–æ–≤–∏–ª–∏ {weight_kefir} –≥—Ä–∞–º—ñ–≤ –∫–µ—Ñ—ñ—Ä–∞,\n'
         f'–ö–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó {weight_kefir * KEFIR / 100} –∫–ö–∞–ª \n'
         f'–ó–∞–≥–∞–ª—å–Ω–∞ –∫–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ—ó: {total_calories} –∫–ö–∞–ª')

if total_calories < 1000:
    popup('–í–∏, –º–∞–±—É–¥—å –∑–∞–ª–∏—à–∏—Ç–µ—Å—è –≥–æ–ª–æ–¥–Ω–∏–º.\U0001F61E')
elif total_calories > 1500:
    popup('–ù–∞ –∂–∞–ª—å, –≤–∏ —Å—Ç—ñ–ª—å–∫–∏ –Ω–µ –∑—ó—Å—Ç–µ, —ñ —Ü–µ –≤—Å–µ –≥—Ä–æ—à—ñ –≤ —Å–º—ñ—Ç–Ω–∏–∫')
else:
    popup('–¶–µ —Å–∞–º–µ –≤–∞—à –≤–∞—Ä—ñ–∞–Ω—Ç –≤–µ—á–µ—Ä—ñ')

counting_total_price = PRICE_PER_CALORIE * total_calories
total_price = Decimal(str(counting_total_price)).quantize(Decimal('0.01'))
put_warning(f'–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è {total_price} –≥—Ä–Ω')
